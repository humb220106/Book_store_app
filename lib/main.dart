import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'config/firebase_options.dart'; // ✅ generated by FlutterFire CLI

// Utils
import 'utils/app_colors.dart';
import 'utils/app_styles.dart';

// Screens
import 'screens/onboarding/onboarding_screen.dart';
import 'screens/auth/login_screen.dart';
import 'screens/auth/signup_screen.dart';
import 'screens/auth/reset_password_screen.dart';
import 'screens/home/home_screen.dart';
import 'screens/profile/profile_screen.dart';
import 'screens/wishlist/wishlist_screen.dart';
import 'screens/cart/cart_screen.dart';
import 'screens/orders/order_history_screen.dart';
import 'screens/admin/admin_dashboard_screen.dart';
import '../../models/book.dart';


void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  
  // ✅ Initialize Firebase with generated options
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  
  runApp(const BookApp());
}

class BookApp extends StatelessWidget {
  const BookApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'BookApp',
      debugShowCheckedModeBanner: false,
      theme: ThemeData(
        primaryColor: AppColors.brown1,
        scaffoldBackgroundColor: AppColors.cream,
        textTheme: const TextTheme(
          bodyLarge: AppStyles.bodyText,
          bodyMedium: AppStyles.caption,
        ),
        appBarTheme: const AppBarTheme(
          backgroundColor: AppColors.brown2,
          foregroundColor: AppColors.white,
        ),
      ),
      initialRoute: '/onboarding',
      routes: {
        '/onboarding': (context) => const OnboardingWelcomeScreen(),
        '/login': (context) => LoginScreen(),
        '/signup': (context) => const SignupScreen(),
        '/reset-password': (context) => ResetPasswordScreen(),
        '/home': (context) => const HomeScreen(),
        '/profile': (context) => const ProfileScreen(),
        '/wishlist': (context) => const WishlistScreen(),
       '/cart': (context) {
            final args = ModalRoute.of(context)!.settings.arguments as List<Book>;
           return CartScreen(cartItems: args);
            },

        '/orders': (context) => const OrderHistoryScreen(),
        '/admin-dashboard': (context) => const AdminDashboardScreen(),
      },
    );
  }
}
